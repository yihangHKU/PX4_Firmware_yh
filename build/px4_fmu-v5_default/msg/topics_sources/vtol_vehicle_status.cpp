/****************************************************************************
 *
 *   Copyright (C) 2013-2016 PX4 Development Team. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 * 3. Neither the name PX4 nor the names of its contributors may be
 *    used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
 * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 ****************************************************************************/

/* Auto-generated by genmsg_cpp from file vtol_vehicle_status.msg */


#include <cinttypes>
#include <px4_log.h>
#include <px4_defines.h>
#include <uORB/topics/vtol_vehicle_status.h>
#include <drivers/drv_hrt.h>
#include <lib/drivers/device/Device.hpp>

constexpr char __orb_vtol_vehicle_status_fields[] = "uint64_t timestamp;uint64_t vehicle_sysidt_state;uint64_t ticks_since_trans;float pitch_sp;float pitch_ang;float vert_acc_cmd;float thrust_cmd;float bx_acc_cmd;float bx_acc_e;float bx_acc_i;float rollrot;float lat_dist;float pitchrot;float longitudinal_dist;float lateral_v;float longitudinal_v;float vz_cmd;float vy_cmd;float vx_cmd;float global_counter;bool vtol_in_rw_mode;bool vtol_in_trans_mode;bool in_transition_to_fw;bool vtol_transition_failsafe;bool fw_permanent_stab;uint8_t[7] _padding0;";

ORB_DEFINE(vtol_vehicle_status, struct vtol_vehicle_status_s, 97, __orb_vtol_vehicle_status_fields);


void print_message(const vtol_vehicle_status_s& message)
{
	PX4_INFO_RAW(" vtol_vehicle_status_s\n");
	if (message.timestamp != 0) {
		PX4_INFO_RAW("\ttimestamp: %" PRIu64 "  (%.6f seconds ago)\n", message.timestamp, hrt_elapsed_time(&message.timestamp) / 1e6);
	} else {
		PX4_INFO_RAW("\n");
	}
	PX4_INFO_RAW("\tvehicle_sysidt_state: %" PRIu64 "\n", message.vehicle_sysidt_state);
	PX4_INFO_RAW("\tticks_since_trans: %" PRIu64 "\n", message.ticks_since_trans);
	PX4_INFO_RAW("\tpitch_sp: %.4f\n", (double)message.pitch_sp);
	PX4_INFO_RAW("\tpitch_ang: %.4f\n", (double)message.pitch_ang);
	PX4_INFO_RAW("\tvert_acc_cmd: %.4f\n", (double)message.vert_acc_cmd);
	PX4_INFO_RAW("\tthrust_cmd: %.4f\n", (double)message.thrust_cmd);
	PX4_INFO_RAW("\tbx_acc_cmd: %.4f\n", (double)message.bx_acc_cmd);
	PX4_INFO_RAW("\tbx_acc_e: %.4f\n", (double)message.bx_acc_e);
	PX4_INFO_RAW("\tbx_acc_i: %.4f\n", (double)message.bx_acc_i);
	PX4_INFO_RAW("\trollrot: %.4f\n", (double)message.rollrot);
	PX4_INFO_RAW("\tlat_dist: %.4f\n", (double)message.lat_dist);
	PX4_INFO_RAW("\tpitchrot: %.4f\n", (double)message.pitchrot);
	PX4_INFO_RAW("\tlongitudinal_dist: %.4f\n", (double)message.longitudinal_dist);
	PX4_INFO_RAW("\tlateral_v: %.4f\n", (double)message.lateral_v);
	PX4_INFO_RAW("\tlongitudinal_v: %.4f\n", (double)message.longitudinal_v);
	PX4_INFO_RAW("\tvz_cmd: %.4f\n", (double)message.vz_cmd);
	PX4_INFO_RAW("\tvy_cmd: %.4f\n", (double)message.vy_cmd);
	PX4_INFO_RAW("\tvx_cmd: %.4f\n", (double)message.vx_cmd);
	PX4_INFO_RAW("\tglobal_counter: %.4f\n", (double)message.global_counter);
	PX4_INFO_RAW("\tvtol_in_rw_mode: %s\n", (message.vtol_in_rw_mode ? "True" : "False"));
	PX4_INFO_RAW("\tvtol_in_trans_mode: %s\n", (message.vtol_in_trans_mode ? "True" : "False"));
	PX4_INFO_RAW("\tin_transition_to_fw: %s\n", (message.in_transition_to_fw ? "True" : "False"));
	PX4_INFO_RAW("\tvtol_transition_failsafe: %s\n", (message.vtol_transition_failsafe ? "True" : "False"));
	PX4_INFO_RAW("\tfw_permanent_stab: %s\n", (message.fw_permanent_stab ? "True" : "False"));
	
}
